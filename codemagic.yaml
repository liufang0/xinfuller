workflows:
  ios-build:
    name: iOS Build
    instance_type: mac_mini_m2
    max_build_duration: 60
    environment:
      flutter: 3.27.4
      xcode: 16.1
      vars:
        TENANT_NAME: "default-tenant"
        IOS_BUNDLE_ID: "io.openim.flutter.demoo"
        IOS_NOTIFICATION_BUNDLE_ID: "io.openim.flutter.demoo.NotificationService"
      # 关键修复：签名配置必须放在 environment.ios 下
      ios:
        certificates:
          distribution: ${{ IOS_DISTRIBUTION_CERTIFICATE }}  # 分发证书（固定键名）
          push: ${{ IOS_PUSH_CERTIFICATE }}                  # 推送证书（固定键名）
        provisioning_profiles:
          # 配置文件需与 Bundle ID 一一对应
          ${{ IOS_BUNDLE_ID }}: ${{ IOS_MAIN_PROFILE }}
          ${{ IOS_NOTIFICATION_BUNDLE_ID }}: ${{ IOS_NOTIFICATION_PROFILE }}
    scripts:
      - name: 清理 Flutter 缓存
        script: flutter clean
      - name: 获取 Dart 依赖
        script: flutter pub get
      - name: 准备 iOS 依赖
        script: |
          cd ios
          rm -rf Podfile.lock Pods ~/Library/Caches/CocoaPods
          pod repo update
          pod install --repo-update
          cd ..
      - name: 生成 ExportOptions.plist
        script: |
          cat > ios/ExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>ad-hoc</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>${{ IOS_BUNDLE_ID }}</key>
              <string>${{ IOS_MAIN_PROFILE_NAME }}</string>
              <key>${{ IOS_NOTIFICATION_BUNDLE_ID }}</key>
              <string>${{ IOS_NOTIFICATION_PROFILE_NAME }}</string>
            </dict>
            <key>signingCertificate</key>
            <string>iPhone Distribution</string>
            <key>signingStyle</key>
            <string>manual</string>
            <key>stripSwiftSymbols</key>
            <true/>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <true/>
          </dict>
          </plist>
          EOF
      - name: 构建并归档 iOS 应用
        script: |
          flutter build ios --release --no-codesign --bundle-suffix ""
          cd ios
          xcodebuild archive \
            -workspace Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -archivePath ../build/ios/archive/Runner.xcarchive \
            -allowProvisioningUpdates \
            CODE_SIGN_IDENTITY="${{ IOS_DISTRIBUTION_CERTIFICATE_NAME }}" \
            PROVISIONING_PROFILE_SPECIFIER="${{ IOS_MAIN_PROFILE }}"
          xcodebuild -exportArchive \
            -archivePath ../build/ios/archive/Runner.xcarchive \
            -exportPath ../build/ios/ipa \
            -exportOptionsPlist ExportOptions.plist
          cd ..
    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/archive/*.xcarchive

  my-workflow:
    name: TOIM
    labels:
      - QA
      - ${{ TENANT_NAME }}
    instance_type: mac_mini_m2
    max_build_duration: 60
    inputs:
      name:
        description: 输入名称
        default: Codemagic
    environment:
      groups:
        - group_name
      vars:
        PUBLIC_ENV_VAR: "value here"
        TENANT_NAME: "default-tenant"
      flutter: stable
      xcode: latest
    cache:
      cache_paths:
        - ~/.pub-cache
        - ios/Pods
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "*"
          include: true
          source: true
      cancel_previous_builds: false
    scripts:
      - echo "Hello, ${{ inputs.name }}"
      - flutter clean
      - flutter pub get
      - cd ios && pod repo update && pod install --repo-update && cd ..
      - flutter build appbundle --release
    artifacts:
      - build/**/outputs/bundle/**/*.aab
    publishing:
      email:
        recipients:
          - name@example.com
      scripts:
        - echo "发布后脚本执行"